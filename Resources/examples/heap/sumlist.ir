   EXP(CALL(NAME main, MEM(BINOP(TEMP FP, SUB, CONST 1))))
   JUMP(NAME _END)
LABEL main
   PROLOGUE(1,0)
   MOVE(TEMP RV, CONST 0)
   EXP(CALL(NAME _printint, CALL(NAME sum, CALL(NAME makelist, MEM(BINOP(TEMP FP, ADD, CONST 2))))))
   EXP(CALL(NAME _printchar, CONST 13))
   EXP(CALL(NAME _printchar, CONST 10))
LABEL main@end@0
   EPILOGUE(1,0)
LABEL sum
   PROLOGUE(1,0)
   MOVE(TEMP RV, CONST 0)
   CJUMP(CONST 0, LT, CALL(NAME isempty, MEM(BINOP(TEMP FP, ADD, CONST 2))), sum@3, sum@4)
LABEL sum@3
   MOVE(TEMP RV, CONST 0)
   JUMP(NAME sum@end@1)
   JUMP(NAME sum@5)
LABEL sum@4
   MOVE(TEMP RV, BINOP(CALL(NAME fst, MEM(BINOP(TEMP FP, ADD, CONST 2))), ADD, CALL(NAME sum, CALL(NAME snd, MEM(BINOP(TEMP FP, ADD, CONST 2))))))
   JUMP(NAME sum@end@1)
LABEL sum@5
LABEL sum@end@1
   EPILOGUE(1,0)
LABEL makelist
   PROLOGUE(1,0)
   MOVE(TEMP RV, CONST 0)
   CJUMP(CONST 0, LT, BINOP(MEM(BINOP(TEMP FP, ADD, CONST 2)), LT, CONST 1), makelist@6, makelist@7)
LABEL makelist@6
   MOVE(TEMP RV, CALL(NAME empty))
   JUMP(NAME makelist@end@2)
   JUMP(NAME makelist@8)
LABEL makelist@7
   MOVE(TEMP RV, CALL(NAME cons, MEM(BINOP(TEMP FP, ADD, CONST 2)), CALL(NAME makelist, BINOP(MEM(BINOP(TEMP FP, ADD, CONST 2)), SUB, CONST 1))))
   JUMP(NAME makelist@end@2)
LABEL makelist@8
LABEL makelist@end@2
   EPILOGUE(1,0)
LABEL cons
   PROLOGUE(2,0)
   MOVE(TEMP SS, CALL(NAME _malloc, CONST 2))
   MOVE(MEM(TEMP SS), MEM(BINOP(TEMP FP, ADD, CONST 2)))
   MOVE(MEM(BINOP(TEMP SS, ADD, CONST 1)), MEM(BINOP(TEMP FP, ADD, CONST 3)))
   MOVE(TEMP RV, TEMP SS)
   EPILOGUE(2,0)
LABEL fst
   PROLOGUE(1,0)
   MOVE(TEMP RV, MEM(MEM(BINOP(TEMP FP, ADD, CONST 2))))
   EPILOGUE(1,0)
LABEL snd
   PROLOGUE(1,0)
   MOVE(TEMP RV, MEM(BINOP(MEM(BINOP(TEMP FP, ADD, CONST 2)), ADD, CONST 1)))
   EPILOGUE(1,0)
LABEL empty
   PROLOGUE(0,0)
   MOVE(TEMP RV, CONST 0)
   EPILOGUE(0,0)
LABEL isempty
   PROLOGUE(1,0)
   MOVE(TEMP RV, BINOP(MEM(BINOP(TEMP FP, ADD, CONST 2)), EQ, CONST 0))
   EPILOGUE(1,0)
